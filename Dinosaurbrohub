getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()



local Window = Rayfield:CreateWindow({
    Name = "Dinosaurbro's universal script",
    LoadingTitle = "Universal",
    LoadingSubtitle = "by Dinosaurbro",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = "Dino", -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = true, -- Set this to true to use our key system
    KeySettings = {
       Title = "Key System",
       Subtitle = "Key System",
       Note = "go to https://pastebin.com/4FrrqNgD for the key",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"dinosaurbrohubontop"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })
 Rayfield:Notify({
   Title = "Info",
   Content = "Hey! You're using a version of Dinosaurbrohub thats in beta! Welcome to the early testers. To delete the GUI, tap the V button on your keyboard.",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Info",
         Callback = function()
         print("Information available.")
      end
   },
},
})

 local Tab = Window:CreateTab("Walkspeed & stuff", 4483362458) -- Title, Image
 local Section = Tab:CreateSection("Walkspeed")

 local Slider = Tab:CreateSlider({
    Name = "Walkspeed",
    Range = {5, 600},
    Increment = 0.5,
    Suffix = "Walkspeed",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(v)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
    end,
 })

 local Slider = Tab:CreateSlider({
    Name = "JumpPower",
    Range = {12, 500},
    Increment = 0.2,
    Suffix = "JumpPower",
    CurrentValue = 10,
    Flag = "Slider2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(v)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = v
    end,
 })
 local Slider = Tab:CreateSlider({
   Name = "Gravity",
   Range = {0, 360},
   Increment = 1,
   Suffix = "Gravity",
   CurrentValue = 10,
   Flag = "Gravity", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(v)
       game.Workspace.Gravity = v
   end,
})

local Slider = Tab:CreateSlider({
   Name = "Health",
   Range = {0, 1900},
   Increment = 0.5,
   Suffix = "HP",
   CurrentValue = 10,
   Flag = "Health", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(v)
       game.Players.LocalPlayer.Character.Humanoid.Health = v
   end,})

   local Keybind = Tab:CreateKeybind({
      Name = "Delete GUI",
      CurrentKeybind = "V",
      HoldToInteract = false,
      Flag = "DeleteGUI", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
      Callback = function(Keybind)
         Rayfield:Destroy()
         Rayfield:Notify({
            Title = "Hey!",
            Content = "GUI Has been deleted. Execute the GUI again to re-access the GUI.",
            Duration = 6.5,
            Image = 4483362458,
            Actions = { -- Notification Buttons
               Ignore = {
                  Name = "GUI Deleted",
                  Callback = function()
                  print("The GUI has been deleted.")
               end
            },
         },
         }) -- The function that takes place when the keybind is pressed
      -- The variable (Keybind) is a boolean for whether the keybind is being held or not (HoldToInteract needs to be true)
      end,
   })

   local Button = Tab:CreateButton({
      Name = "Remove Nametag",
      Callback = function()
      game.Players.LocalPlayer.Character.Head.Nametag.Frame.Visible = false-- The function that takes place when the button is pressed
      end,
   })
